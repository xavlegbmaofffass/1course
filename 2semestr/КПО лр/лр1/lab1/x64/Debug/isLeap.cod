; Listing generated by Microsoft (R) Optimizing Compiler Version 19.41.34123.0 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

msvcjmc	SEGMENT
__47CA64FA_lab1@pch DB 01H
__CD01F7B1_isLeap@cpp DB 01H
__1534EFAF_stdafx@h DB 01H
__6A45ADD0_stdafx@cpp DB 01H
msvcjmc	ENDS
PUBLIC	?isLeapYear@@YA_NH@Z				; isLeapYear
PUBLIC	__JustMyCode_Default
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	__CheckForDebuggerJustMyCode:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$?isLeapYear@@YA_NH@Z DD imagerel $LN4
	DD	imagerel $LN4+68
	DD	imagerel $unwind$?isLeapYear@@YA_NH@Z
pdata	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?isLeapYear@@YA_NH@Z DD 025051201H
	DD	010d2312H
	DD	07006001dH
	DD	05005H
xdata	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
  00000	c2 00 00	 ret	 0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\ó÷åáà\ÊÏÎ ëð\ëð1\lab1\isLeap.cpp
;	COMDAT ?isLeapYear@@YA_NH@Z
_TEXT	SEGMENT
year$ = 224
?isLeapYear@@YA_NH@Z PROC				; isLeapYear, COMDAT

; 2    : bool isLeapYear(int year) {

$LN4:
  00000	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  00004	55		 push	 rbp
  00005	57		 push	 rdi
  00006	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00012	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__CD01F7B1_isLeap@cpp
  00019	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001e	90		 npad	 1

; 3    : 	if (year % 4 == 0) {

  0001f	8b 85 e0 00 00
	00		 mov	 eax, DWORD PTR year$[rbp]
  00025	99		 cdq
  00026	83 e2 03	 and	 edx, 3
  00029	03 c2		 add	 eax, edx
  0002b	83 e0 03	 and	 eax, 3
  0002e	2b c2		 sub	 eax, edx
  00030	85 c0		 test	 eax, eax
  00032	75 04		 jne	 SHORT $LN2@isLeapYear

; 4    : 		return true;

  00034	b0 01		 mov	 al, 1
  00036	eb 02		 jmp	 SHORT $LN1@isLeapYear
$LN2@isLeapYear:

; 5    : 	}
; 6    : 	return false;

  00038	32 c0		 xor	 al, al
$LN1@isLeapYear:

; 7    : }

  0003a	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00041	5f		 pop	 rdi
  00042	5d		 pop	 rbp
  00043	c3		 ret	 0
?isLeapYear@@YA_NH@Z ENDP				; isLeapYear
_TEXT	ENDS
END
